version: '3.4'

volumes:
  dbbackups:
  postgis-data:
    
services:

  sqlData:
    image: kartoza/postgis:13.0
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DBNAME=dinesafe
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - 25432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  dbbackups:
    image: kartoza/pg-backup:13.0
    hostname: pg-backups
    volumes:
      - dbbackups:/backups
    environment:
      - DUMPPREFIX=PG_db
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=sqlData
      - POSTGRES_DBNAME=dinesafe
    restart: on-failure
    depends_on:
      sqlData:
        condition: service_healthy
  
  api:
    image: ${REGISTRY:-w2b}/wheretobite.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: src/WhereToBite.Api/Dockerfile
    ports:
      - 80:80
      - 81:81
    depends_on:
      - sqlData
    